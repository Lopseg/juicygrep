#!/bin/bash

# Verifica se o número de argumentos é válido
if [ $# -ne 2 ]; then
  echo "Uso: juicygrep arquivo_de_entrada lista_de_endpoints"
  exit 1
fi

# Armazena os argumentos em variáveis
input_file=$1
endpoints_file=$2

# Verifica se o arquivo de entrada existe
if [ ! -f $input_file ]; then
  echo "Arquivo de entrada não encontrado: $input_file"
  exit 1
fi

# Cria o arquivo de saída
output_file="${input_file}.filtered"
echo "" > $output_file

# Lê a lista de endpoints interessantes e armazena em um array
endpoints=($(cat $endpoints_file))

# Define o tamanho da barra de progresso
bar_size=50

# Calcula o número total de URLs a processar
total=$(wc -l < "$input_file")

# Loop que processa as URLs e atualiza a barra de progresso
count=0
# Lê o arquivo de entrada linha por linha
while read line; do
  # Incrementa o contador de URLs processadas
  count=$((count + 1))

  # Calcula o número de caracteres preenchidos na barra de progresso
  filled=$((count * bar_size / total))

  # Calcula o número de caracteres vazios na barra de progresso
  empty=$((bar_size - filled))

  # Escreve a barra de progresso na tela
  printf "[%${filled}s%${empty}s] %d/%d\r" ">" " " $count $total
  # Verifica se a URL contém algum dos endpoints interessantes
  for endpoint in "${endpoints[@]}"; do
    if echo $line | grep -qF "$endpoint"; then
      # Se a URL contiver um endpoint interessante, adiciona ao arquivo de saída
      	echo $line
      	echo $line >> $output_file
      break
    fi
  done
done < $input_file

echo "Arquivo filtrado salvo em: $output_file"
